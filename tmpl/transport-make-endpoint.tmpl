// Autogenerated code, do not change directly.
// To make changes to this file, please modify the templates at
// go-kit-middlewarer/tmpl/*.tmpl

package transport

import(
	"golang.org/x/net/context"

	"github.com/go-kit/kit/endpoint"

	"{{.BasePackage}}"
)

{{define "make-endpoint"}}
// make{{.MethodName}}Endpoint creates a github.com/go-kit/kit/endpoint.Endpoint for {{.BasePackage}}.{{.InterfaceName}}.{{.MethodName}}.
// It will automatically wrap and unwrap the arguments and results of the method.
func make{{.MethodName}}Endpoint({{.InterfaceNameLcase}} {{.BasePackageName}}.{{.InterfaceName}}) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(*{{.MethodNameLcase}}Request)
		var resp {{.MethodNameLcase}}Response
		resp.embedMime = new(embedMime)

		{{if .Results}}
		{{.MethodResultNamesStr}} := {{.InterfaceNameLcase}}.{{.MethodName}}({{.MethodArgumentNamesStr}})
		{{range .Results}}resp.{{.PublicName}} = {{.Name}}
		{{end}}
		{{else}}
		{{.InterfaceNameLcase}}.{{.MethodName}}({{.MethodArgumentNamesStr}})
		{{end}}

		if mime := req.GetMime(); mime != "" {
			resp.SetMime( mime )
		}

		return resp, nil
	}
}
{{end}}
{{range .Methods}}{{template "make-endpoint" .}}{{end}}
